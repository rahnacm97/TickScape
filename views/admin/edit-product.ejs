<%- include("../../views/partials/admin/header") %>



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
   <style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f8f4f4;
        margin: 0;
        padding: 0;
    }

    .content-main {
        margin: 20px;
        padding: 20px;
        background-color: #fcfbfb;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .content-header h2 {
        font-size: 24px;
        font-weight: bold;
        color: #1c1b1b;
        border-bottom: 2px solid #007bff;
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .form-label {
        font-weight: bold;
        color: #555;
    }

    .form-control {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
    }

    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 3px rgba(0, 123, 255, 0.5);
    }

    .error-message {
        color: red;
        font-size: 12px;
        margin-top: 5px;
    }

    .card {
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 20px;
    }

    button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    button:hover {
        background-color: #0056b3;
    }

    .mb-4 {
        margin-bottom: 20px;
    }

    .thumbnails-container {
        display: flex;
        overflow-x: auto;
        margin-bottom: 20px;
    }

    .thumbnail img {
        height: 100px;
        width: auto;
        border-radius: 5px;
        margin-right: 10px;
    }
       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }
       .thumbnail {
           margin-right: 10px;
       }
       .input-upload {
       position: relative;
        }

       .error-message {
           color: red;
           display: none;
       }
   </style>



   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">

   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Edit Product</h2>
               </div>
           </div>
           <div class="col-lg-12">
               <div class="card mb-4">
                   <div class="card-body">
                       <form id="myform"
                          >
                          
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text"  name="productName" value="<%=product.productName%>"
                                   class="form-control border" id="product_name">
                                   <div id="productName-error" class="error-message"></div>
                           </div>
                           <div class="col-lg-4 mb-4">
                            <label class="form-label">Brand</label>
                            <select class="form-select border" name="brand">
                                <% for (let i = 0; i < brand.length; i++) { %>  
                                    <option value="<%= brand[i]._id %>" <%= product.brand && product.brand._id.toString() === brand[i]._id.toString() ? 'selected' : '' %>>
                                        <%= brand[i].brandName %>
                                    </option>
                                <% } %> 
                            </select>
                            <div id="brand-error" class="error-message"></div>
                        </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <input name="descriptionData" value="<%=product.description%>"  id="descriptionid" class="form-control border"
                                   rows="4">
                                   <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="â‚¹" name="regularPrice" type="text"
                                           value="<%=product.regularPrice%>" class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input id="salePrice" name="salePrice" type="text" value="<%=product.salePrice%>"
                                           class="form-control border">
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input name="quantity" type="text" value="<%=product.quantity%>"
                                           class="form-control border">
                                           <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div>
                           </div>
                           <div class="row">
                           
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Color</label>
                                       <input name="color" type="text" value="<%=product.color%>"
                                           class="form-control border">
                                           <div id="color-error" class="error-message"></div>
                                   </div>
                               </div>
                              
                           </div>
                           <div class="card mb-4">
                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                            <% for (let i = 0; i < category.length; i++) { %>
                                                <option value="<%= category[i]._id %>" 
                                                    <% if (category[i]._id.toString() === product.category.toString()) { %>selected<% } %>>
                                                    <%= category[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>

                            <%for(let i =0;i<product.productImage.length;i++){%>
                                <div class="" style="position: relative;">

                                    <img src="/<%= product.productImage[i] %>" alt="" style="width: 300px;height: 300px;object-fit:cover;">
                                    <i onclick="deleteSingleImage('<%= product.productImage[i] %>','<%=product._id%>')" style="position: absolute;     position: absolute;
                                        left: 12px;
                                        top: 12px;
                                        cursor: pointer; cursor: pointer;color: red;font-size:18px" class="fa-regular fa-circle-xmark"></i>
                                </div>
                            <%}%>
                            


                           <!-- /latest code -->
                           <div class="row">
                            <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label text-white">Choose Images</label>
                            </div>
                            </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                <input name="images" type="file" id="upload" multiple onchange="handleImage(event)" />
                    
                                <div id="cropperContainers"></div> 
                                                                                 
                                <div id="cropperContainer1" class="crop-container" style="display: none;">
                                    <img id="cropImage1" alt="Image to crop">
                                    <button type="button" id="saveButton1" class="btn btn-primary mt-2">Save Cropped Image</button>
                                </div>
                            </div>
                            </div>
                            </div>
                          
                          <br><br>
                          
                           <div>
                               <button class="btn btn-md rounded font-sm hover-up" id="updatebtn"
                                   type="submit">Update</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
       </div>
   </section>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   
   <script>

      let croppers = {}; 
      let croppedImages = []; 

      const handleImage = (e) => {
      const files = e.target.files; 
      console.log("Selected Files: ", files);

      const cropperContainers = document.getElementById("cropperContainers");
      cropperContainers.innerHTML = "";

      for (let i = 0; i < files.length; i++) {
          const file = files[i];
          const reader = new FileReader();

          const cropperContainer = document.createElement('div');
          cropperContainer.id = `cropperContainer${i}`;
          cropperContainer.style.marginBottom = "20px"; 
          cropperContainers.appendChild(cropperContainer);

          const img = document.createElement('img');
          img.id = `cropImage${i}`;
          img.style.width = '300px';
          img.style.height = '200px';
          cropperContainer.appendChild(img);

          const saveButton = document.createElement('button');
          saveButton.textContent = 'Save Cropped Image';
          saveButton.id = `saveButton${i}`;
          saveButton.setAttribute("type", "button");
          cropperContainer.appendChild(saveButton);

          reader.onload = function () {
              img.src = reader.result;

              if (croppers[i]) {
                  croppers[i].destroy(); 
              }

              croppers[i] = new Cropper(img, {
                  aspectRatio: 1,  
                  viewMode: 1,
                  autoCropArea: 1,
              });

              saveButton.onclick = function () {
                  const croppedCanvas = croppers[i].getCroppedCanvas({
                      width: 600,  
                      height: 600
                  });

                  const fileExtension = file.name.split('.').pop();  

                  croppedCanvas.toBlob(function (blob) {
                      const url = URL.createObjectURL(blob);

                      img.src = url; 

                      img.dataset.blob = blob;  

                      croppedImages.push(blob);
                      console.log("Cropped Images Array: ", croppedImages);

                      const croppedImagePreview = document.createElement('img');
                      croppedImagePreview.src = url;
                      croppedImagePreview.style.width = '200px';
                      croppedImagePreview.style.height = '200px';
                      cropperContainer.appendChild(croppedImagePreview);

                      cropperContainer.innerHTML = ''; 
                      cropperContainer.appendChild(croppedImagePreview);  

                      const reCropButton = document.createElement('button');
                      reCropButton.textContent = 'Re-Crop This Image';
                      reCropButton.setAttribute("type", "button");
                      cropperContainer.appendChild(reCropButton);

                      reCropButton.onclick = function () {
                          img.src = url;  
                       
                          croppers[i].destroy();

                          croppers[i] = new Cropper(img, {
                              aspectRatio: 1, 
                              viewMode: 1,
                              autoCropArea: 1,
                          });

                          cropperContainer.innerHTML = ''; 
                          cropperContainer.appendChild(img); 
                          cropperContainer.appendChild(saveButton); 
                      };
                  }, `image/${fileExtension}`, 0.7); 
              };
          };

          reader.readAsDataURL(file);
      }
  };


       
</script>



<script>
  $(document).ready(function () {
 
    $.validator.addMethod("greaterThan", function (value, element, param) {
        return this.optional(element) || parseFloat(value) > parseFloat($(param).val());
    }, "Regular price must be greater than sale price.");

    $("#myform").validate({
        rules: {
            productName: {
                required: true,
                minlength: 3
            },
            descriptionData: {
                required: true,
                minlength: 6
            },
            regularPrice: {
                required: true,
                number: true,
                greaterThan: "#salePrice" 
            },
            salePrice: {
                required: true,
                number: true
            },
            quantity: {
                required: true,
                number: true,
                min: 1
            },
            color: {
                required: true
            }
        },
        messages: {
            productName: {
                required: "Please enter product name.",
                minlength: "Product name must consist of at least 3 characters."
            },
            descriptionData: {
                required: "Please provide product description.",
                minlength: "Description must consist of at least 6 characters."
            },
            regularPrice: {
                required: "Please enter regular price.",
                number: "Please enter a valid number.",
                greaterThan: "Regular price must be greater than sale price."
            },
            salePrice: {
                required: "Please enter sale price.",
                number: "Please enter a valid number."
            },
            quantity: {
                required: "Please enter quantity value.",
                number: "Quantity must be greater than 0."
            },
            color: {
                required: "Enter a color value."
            }
        },
        submitHandler: function (form) {
            console.log("form is",form);
            // return true;
            
            const formData = new FormData(form);
            formData.delete('images')

            for (const [key, value] of formData) {
            console.log('Â»', key, value)
}
        
            

            console.log(croppedImages, 'croppedImages'); 
            if(croppedImages.length> 0){
            croppedImages.forEach((image, index) => {
   
    formData.append('images', image);
  });
        }
       
            // $.ajax({
            //     url: "/admin/editProduct/<%=product._id%>", 
            //     type: "POST",
            //     data: formData,
            //     processData: false, 
            //     contentType: false, 
            //     success: function (response) {
                  
            //         window.location.reload();
            //     },
            //     error: function (xhr, status, error) {
            //         alert("An error occurred: " + error);
            //     }
            // });

            $.ajax({
    url: "/admin/editProduct/<%=product._id%>",
    type: "POST",
    data: formData,
    processData: false,
    contentType: false, 
    success: function (response) {
        Swal.fire({
            icon: "success",
            title: "Product Updated!",
            text: "Your product has been updated successfully.",
            showConfirmButton: true,
            timer: 2000 
        }).then(() => {
            window.location.reload(); 
        });
    },
    error: function (xhr, status, error) {
        Swal.fire({
            icon: "error",
            title: "Update Failed!",
            text: "Something went wrong. Please try again.",
        });
    }
});

        }
    });
});


// function deleteSingleImage(imageId, productId) {
//     const status = window.confirm('Are you sure you want to delete this image?')
//     if(!status){
//         return true;
//     }
//     $.ajax({
//         url: "/admin/deleteImage",
//         method: 'delete',
//         data: {
//             imageNameToServer: imageId,
//             productIdToServer: productId
//         },
//         success: function (response) {
//             if (response.status === true) {
//                 window.location.reload();
//             }
//         },
//         error: function (err) {
//             console.error("Error deleting image:", err);
//         }
//     });
// }


function deleteSingleImage(imageId, productId) {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to delete this image? This action cannot be undone.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!",
        cancelButtonText: "Cancel"
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: "/admin/deleteImage",
                method: "DELETE",
                data: {
                    imageNameToServer: imageId,
                    productIdToServer: productId
                },
                success: function (response) {
                    if (response.status === true) {
                        Swal.fire({
                            icon: "success",
                            title: "Deleted!",
                            text: "The image has been deleted successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            window.location.reload();
                        });
                    }
                },
                error: function (err) {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: "Something went wrong while deleting the image.",
                    });
                }
            });
        }
    });
}


</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.21.0/jquery.validate.min.js" integrity="sha512-KFHXdr2oObHKI9w4Hv1XPKc898mE4kgYx58oqsc/JqqdLMDI4YjOLzom+EMlW8HFUd0QfjfAvxSL6sEq/a42fQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>


