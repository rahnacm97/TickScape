<%- include("../../views/partials/admin/header") %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f4f6f9;
      margin: 0;
      padding: 0;
    }

    .content-main {
      padding: 40px;
    }

    .content-header {
      margin-bottom: 30px;
    }

    .content-title {
      font-size: 32px;
      font-weight: 700;
      color: #333;
    }

    .table-container {
      background-color: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      margin: 20px auto;
      max-width: 1200px;
      overflow-x: auto;
    }

    .table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 20px;
    }

    .table th,
    .table td {
      padding: 15px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    .table th {
      background-color: #f7f7f7;
      font-weight: 500;
      text-align: center;
    }

    .table td {
      text-align: center;
      vertical-align: middle;
    }

    /* Improved Image Styling */
    .table td img {
      width: 80px;
      height: 80px;
      object-fit: cover;
      border-radius: 8px;
      box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease-in-out;
    }

    .table td img:hover {
      transform: scale(1.1);
    }

    .form-container {
      display: flex;
      align-items: center;
    }

    select {
      padding: 8px;
      border-radius: 5px;
      border: 1px solid #ddd;
      font-size: 14px;
    }

    .btn {
      background-color: #007bff;
      color: white;
      padding: 8px 12px;
      font-size: 14px;
      border-radius: 5px;
      cursor: pointer;
      border: none;
      margin-left: 10px;
    }

    .btn:hover {
      background-color: #0056b3;
    }

    .pagination-container {
      text-align: center;
      margin-top: 20px;
    }

    .pagination a,
    .pagination .current-page {
      padding: 8px 16px;
      margin: 0 4px;
      border-radius: 30px;
      text-decoration: none;
      background-color: #f0f0f0;
      color: #333;
      transition: background-color 0.3s ease;
    }

    .pagination a:hover {
      background-color: #007bff;
      color: white;
    }

    .pagination .current-page {
      background-color: #007bff;
      color: white;
    }

    .btn-danger{
        background-color: rgb(220, 11, 11);
    }
    .btn-danger:hover{
        background-color: rgb(160, 11, 11);
    }
  </style>
</head>
<body>

  <div class="content-main">
    <h2 class="content-title">Return Requests</h2>

    <div class="table-container table-responsive">
      <table class="table table-hover">
        <thead>
          <tr>
            <th>Sl. No</th>
            <th>User Name</th>
            <th>Order ID</th>
            <th>Amount</th>
            <th>Reason</th>
            <th>Status</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% if(orders.length > 0){%>
          <% orders.forEach((order,index) => { %>
            <tr id="order-<%= order._id %>">
              <td class="text-center"><%= (currentPage - 1) * limit + index + 1 %></td>
              <td><%= order.userId.fname %> <%= order.userId.lname %></td>
              <td><%= order._id %></td>
              <td>
                <%= order.totalPrice %>
              </td>
              <td>
                <%= order.orderedItems.length > 0 ? order.orderedItems[0].returnReason : 'N/A' %>
              </td>
              <td><strong><%= order.status %></strong></td>
              <!-- <td>â‚¹<%= order.totalPrice.toFixed(2) %></td> -->
              <td>
                <% let productId = (order.orderedItems.length > 0 && order.orderedItems[0].productId._id) ? String(order.orderedItems[0].productId._id).replace(/'/g, "\\'") : ''; %>
                <% let orderId = String(order._id).replace(/'/g, "\\'"); %>
                
                    <button class="btn btn-success approve-order mb-2"
                        onclick="confirmApprove('<%= orderId %>', '<%= productId %>')">
                        Approve
                    </button>          

                <button class="btn btn-danger reject-order mb-2" 
                    onclick="confirmReject('<%= orderId %>', '<%= productId %>')">
                    Reject
                </button>

            </td>
            </tr>
        <% }) %>

        <% } else { %>
          <tr>
            <p>No request found</p>
          </tr>
           
        <%}%>

        </tbody>
      </table>

      <div class="pagination-container">
        <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
        <% if (i === currentPage) { %>
        <span class="current-page"><%= i %></span>
        <% } else { %>
        <a href="?page=<%= i %>"><%= i %></a>
        <% } %>
        <% } %>
        <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
        <% } %>
      </div>
    </div>
  </div>

</body>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
async function confirmReject(orderId, productId) {
    if (!productId) {
        Swal.fire("Error!", "No product found to reject.", "error");
        return;
    }

    const result = await Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, reject it!"
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch("/admin/rejectOrder", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ orderId, productId }),
            });

            const data = await response.json();

            if (data.success) {
                await Swal.fire("Rejected!", "The order has been rejected.", "success");

                
                const row = document.getElementById(`order-${orderId}`);
                if (row) row.remove();

                const remainingRows = document.querySelectorAll(`tr[data-order-id="${orderId}"]`);
                if (remainingRows.length === 0) {
                   
                    const orderSection = document.querySelector(`#order-${orderId}`);
                    if (orderSection) orderSection.remove();
                }
            } else {
                Swal.fire("Error!", data.message, "error");
            }
        } catch (error) {
            Swal.fire("Error!", "Something went wrong.", "error");
        }
    }
}

function confirmApprove(orderId, productId) {
    Swal.fire({
        title: "Are you sure?",
        text: "You are about to approve this order.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#28a745",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, Approve!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch("/admin/approveOrder", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ orderId, productId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire("Approved!", data.message, "success").then(() => {
                        
                      const row = document.getElementById(`order-${orderId}`);
                        if (row) row.remove();

                       
                        const remainingRows = document.querySelectorAll(`tr[data-order-id="${orderId}"]`);
                        if (remainingRows.length === 0) {
                            
                            const orderSection = document.querySelector(`#order-${orderId}`);
                            if (orderSection) orderSection.remove();
                        }
                    });
                } else {
                    Swal.fire("Error!", data.message, "error");
                }
            })
            .catch(error => {
                console.error(error);
                Swal.fire("Error!", "Something went wrong. Try again!", "error");
            });
        }
    });
}

</script>
<%- include("../../views/partials/admin/footer") %>
