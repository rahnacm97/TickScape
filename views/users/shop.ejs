<%- include("../../views/partials/user/header") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
 body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f8f8f8;
  color: #333;
  line-height: 1.6;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 15px;
}

.main-container {
  margin: 20px auto;
}

.page-header.breadcrumb-wrap {
    margin-top: 10px;
    background-color: #ede9ec;
    padding: 10px 0;
}

.breadcrumb-wrap {
    padding: 15px 0;
    background-color: #1e918b;
    color: #fff;
}

.breadcrumb a {
    color: #088178;
    text-decoration: none;
}

.breadcrumb span {
    margin: 0 5px;
    color: rgb(125, 124, 124);
}

.shop-topbar {
  display: flex;
  justify-content: space-between; /* Ensure space between items */
  align-items: center; /* Align items vertically in the center */
  margin-bottom: 20px;
  margin-top: 20px;
}

.search-bar {
  margin-left: auto; /* Push the search bar to the right */
}

.search-form {
  display: flex;
  align-items: center;
  background-color: #f1f1f1;
  border-radius: 25px;
  overflow: hidden;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
  max-width: 500px;
}

.search-input {
  flex: 1;
  padding: 8px 10px;
  font-size: 14px;
  border: none;
  outline: none;
  background-color: transparent;
  min-width: 300px;
}

.search-button {
  padding: 8px 15px;
  background-color: #1e918b;
  color: #fff;
  border: none;
  cursor: pointer;
  font-size: 14px;
  border-radius: 5px;
  margin-right: 5px;
  transition: background-color 0.3s, transform 0.2s;
}

.search-button:hover {
  background-color: #0056b3;
  transform: scale(1.05);
}

.sidebar {
  padding: 20px;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
  width: 300px;
}

.filter-title {
  font-size: 18px;
  font-weight: bold;
  margin-bottom: 10px;
  color: #1e918b;
}

.filter-item {
  margin: 5px 0;
}

.filter-item a {
  color: #555;
  text-decoration: none;
  font-size: 14px;
  transition: color 0.3s ease;
}

.filter-item a:hover {
  color: #1e918b;
}

.price-filter .price-options {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.price-button {
  padding: 5px 10px;
  background-color: #f8f8f8;
  border: 1px solid #ddd;
  border-radius: 20px;
  cursor: pointer;
  font-size: 12px;
  color: #333;
  text-align: center;
  transition: background-color 0.3s ease, transform 0.2s;
}

.price-button:hover {
  background-color: #1e918b;
  color: white;
  transform: scale(1.05);
}

.price-filter .sort-options {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.sort-button {
  padding: 5px 10px;
  background-color: #f8f8f8;
  border: 1px solid #ddd;
  border-radius: 20px;
  cursor: pointer;
  font-size: 12px;
  color: #333;
  text-align: center;
  transition: background-color 0.3s ease, transform 0.2s;
}

.sort-button:hover {
  background-color: #1e918b;
  color: white;
  transform: scale(1.05);
}

.product-list-container {
  display: flex;
  gap: 20px;
}

.product-grid {
  flex: 1;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 20px;
}

.product-card {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 15px;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
  position: relative;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.product-card:hover {
  transform: translateY(-5px);
  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2);
}

.product-card img {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
}

.product-card h4 {
  font-size: 16px;
  font-weight: bold;
  margin: 10px 0;
}

.product-card p {
  font-size: 14px;
  color: #555;
  line-height: normal;
}

.wishlist-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: rgba(255, 255, 255, 0.8);
  color: #ff5050;
  border: none;
  padding: 8px;
  border-radius: 50%;
  cursor: pointer;
  font-size: 14px;
}

.add-to-cart-btn {
  margin-top: 10px;
  padding: 10px 20px;
  background-color: #1e918b;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s;
}

.add-to-cart-btn:hover {
  background-color: #136c66;
  transform: scale(1.05);
}

.pagination {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin: 20px 0;
}

.pagination a {
  padding: 8px 12px;
  background-color: #fff;
  border: 1px solid #ddd;
  color: #333;
  text-decoration: none;
  border-radius: 4px;
  transition: background-color 0.3s ease, transform 0.2s;
}

.pagination a:hover {
  background-color: #1e918b;
  color: white;
  transform: scale(1.05);
}

.pagination .active {
  background-color: #1e918b;
  color: white;
}

.no-products {
  position: absolute;
  margin-left: 15%;
}

.no-products p { 
  font-size: 20px;
  font-weight: bold;
  color: #ff4d4d;
  background-color: #fdfdfd; /* Light red background */
  padding: 20px 20px;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}
.no-products a{
  margin-left: 40%;
  margin-top: 20px;
  font-size: 12px;
}
strike{
  color: rgb(249, 110, 110);
}

.filter-item.active,
.price-button.active,
.sort-button.active {
    background-color: #ddf7ed; /* Highlight color */
    color: rgb(9, 8, 8);
    font-weight: bold;
    border-radius: 20px;
    padding: 5px 10px;
}

.back-to-shop {
    margin-top: 30px;
    padding: 8px 15px;
    color: #01a08b;
    text-decoration: none;
    border-radius: 5px;
    transition: background 0.3s ease;
}


</style>

<div class="main-container">
  <div class="page-header breadcrumb-wrap">
    <div class="container">
        <div class="breadcrumb">
            <a href="/" rel="nofollow">Home</a>
            <span></span>Shop
        </div>        
    </div>
</div>
<div class="shop-topbar">
  <div class="search-bar" style="margin-right: 50px;">
    <form action="javascript:void(0);" onsubmit="searchProducts()" class="search-form">
      <input type="text" id="searchQuery" name="search" placeholder="Search item" class="search-input" />
      <button type="submit" class="search-button" style="margin-right: 0px; border-radius: 25px;">Search</button>
    </form>
  </div>
</div>
<section class="shop-page container">
   <div class="product-list-container">
     <aside class="sidebar">
       <div class="filter-section">
         <div class="filter-title">Categories</div>
         <div class="category-brand-container">
           <ul>
            <%for(let i =0;i<category.length;i++){%>
               <li class="filter-item <%= selectedCategory == category[i]._id.toString() ? 'active' : '' %>" data-id="<%= category[i]._id %>" data-type="category" >
                <a href="javascript:void(0);" onclick="applyFilters('category', '<%= category[i]._id %>')"> 
                  <%= category[i].name %>
                </a>
               </li>
            <%}%>
           </ul>
         </div>
       </div>
      
       <div class="filter-section">
         <div class="filter-title">Brands</div>
         <div class="category-brand-container">
           <ul>
            <% if (Array.isArray(brand) && brand.length > 0) { %>
              <% for (let i = 0; i < brand.length; i++) { %>            
                  <% if (brand[i].brandName) { %> 
                    <li class="filter-item <%= selectedBrand === brand[i]._id.toString() ? 'active' : '' %>" data-id="<%= brand[i]._id %>" data-type="brand">
                      <a href="javascript:void(0);" onclick="applyFilters('brand', '<%= brand[i]._id %>')"> 
                        <%= brand[i].brandName %>
                      </a>
                    </li>
                  <% } %>
              <% } %>
          <% } else { %>
              <p>No brands available.</p>
          <% } %>
           </ul>
         </div>
       </div>
     
       <div class="price-filter">
         <div class="filter-title">Filter by Price</div>
         <form id="price-filter-form">
          <div class="price-options">
            <% const priceRanges = [
              { gt: 1, lt: 100, label: "Under $100" },
              { gt: 100, lt: 500, label: "$100 - $500" },
              { gt: 500, lt: 1000, label: "$500 - $1000" },
              { gt: 1000, lt: 10000, label: "Above $1000" }
            ]; %>
        
            <% for (let range of priceRanges) { %>
              <a href="javascript:void(0);" 
                 onclick="applyFilters('price', {gt: '<%= range.gt %>', lt: '<%= range.lt %>' })">
                <button type="button" class="price-button" 
                        data-type="price" 
                        data-gt="<%= range.gt %>" 
                        data-lt="<%= range.lt %>">
                  <%= range.label %>
                </button>
              </a>
            <% } %>
          </div>
        </form>
       </div>

      <div class="price-filter">
        <div class="filter-title">Sort by</div>
        <form id="sort-filter-form">
          <div class="sort-options">
            <% const sortOptions = [
              { value: "price_asc", label: "Price: Low to High" },
              { value: "price_desc", label: "Price: High to Low" },
              { value: "name_asc", label: "Name: Aa-Zz" },
              { value: "name_desc", label: "Name: Zz-Aa" }
            ]; %>
        
            <% for (let option of sortOptions) { %>
              <a href="javascript:void(0);" onclick="applyFilters('sort', '<%= option.value %>')">
                <button type="button" class="sort-button" 
                        data-type="sort" 
                        data-id="<%= option.value %>">
                  <%= option.label %>
                </button>
              </a>
            <% } %>
          </div>
        </form>
      </div>

     </aside>

     <main class="product-grid">
      <% if (Array.isArray(products) && products.length > 0) { %>
        <% for(let i = 0; i < products.length; i++) { %>
         <div class="product-card" style="height: 400px;">
           <span class="wishlist-btn" onclick="addToWishlist('<%= products[i]._id %>')">❤️</span>
           <a href="/productDetails?id=<%= products[i]._id %>">
             <img src="http://localhost:3000/<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>" style = "height: 200px; width:200px"/>
             <h4><%= products[i].productName%></h4>
             <% if (products[i].brand && products[i].brand.brandName) { %>
              <p>Brand: <%= products[i].brand.brandName %></p>
            <% } %>
            <% if (products[i].category && products[i].category.name) { %>
              <p>Category: <%= products[i].category.name %></p>
            <% } %>
             <p>Price: $<%= products[i].salePrice.toLocaleString('en-IN')%> <span class="text-muted"><strike>$<%= products[i].regularPrice.toLocaleString('en-IN')%></strike></span></p>
           </a>
           <button class="add-to-cart-btn" onclick="addToCart('<%= products[i]._id %>')">Add to Cart</button>
         </div>
         <% } %>
         <% } else { %>
           <div class="no-products">
             <p>
              Oops! No products available matching your filters.. <br>
              <a href="javascript:void(0);" class="back-to-shop" onclick="resetFilters()">Go Back</a>               
             </p>
             
          </div>
        <% } %>      
     </main>    
</div>
<!-- Pagination -->
<div class="pagination">
  <% if (currentPage > 1) { %>
    <a class="btn" href="javascript:void(0);" onclick="loadPage('<%= currentPage - 1 %>')">
      Prev
    </a>
  <% } %>

  <% for (let i = 1; i <= totalPages; i++) { %>
    <a class="btn <%= currentPage === i ? 'active' : '' %>" 
      href="javascript:void(0);" 
      onclick="loadPage('<%= i %>')">
     <%= i %>
   </a>
  <% } %>

  <% if (currentPage < totalPages) { %>
    <a class="btn" href="javascript:void(0);" onclick="loadPage('<%= currentPage + 1 %>')">
      Next
    </a>
  <% } %>
</div>

</section>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

 function searchProducts() {
    let searchValue = document.getElementById("searchQuery").value.trim();
    console.log("Search Query:", searchValue);
    filters.search = searchValue;
    filters.page = 1;
    updateProducts();
 }
  
  let filters = {
    category: "<%= selectedCategory || '' %>",
    brand: "<%= selectedBrand || '' %>",
    price: { gt: "<%= selectedPriceRange.gt || '' %>", lt: "<%= selectedPriceRange.lt || '' %>" },
    sort: "<%= sort || '' %>",
    page: "<%= currentPage || 1 %>"
  };

  function applyFilters(type, value) {
    if (type === 'category') {
        filters.category = value;
        document.querySelectorAll('.filter-item[data-type="category"]').forEach(item => item.classList.remove('active'));
        document.querySelector(`.filter-item[data-id='${value}'][data-type="category"]`)?.classList.add('active');
    }

    if (type === 'brand') {
        filters.brand = value;
        document.querySelectorAll('.filter-item[data-type="brand"]').forEach(item => item.classList.remove('active'));
        document.querySelector(`.filter-item[data-id='${value}'][data-type="brand"]`)?.classList.add('active');
    }

    if (type === 'price') {
        filters.price = value;
        document.querySelectorAll('.price-button').forEach(button => button.classList.remove('active'));
        document.querySelector(`.price-button[data-gt='${value.gt}'][data-lt='${value.lt}']`)?.classList.add('active');
    }

    if (type === 'sort') {
        filters.sort = value;
        document.querySelectorAll('.sort-button').forEach(button => button.classList.remove('active'));
        document.querySelector(`.sort-button[data-id='${value}']`)?.classList.add('active');
    }

    if (type === 'search') filters.search = value;

    filters.page = 1;
    updateProducts();
}

  function loadPage(pageNumber) {
    filters.page = pageNumber;
    updateProducts();
  }

  function updateProducts() {
    let query = `?page=${filters.page}`;
    if (filters.category) query += `&category=${filters.category}`;
    if (filters.brand) query += `&brand=${filters.brand}`;
    if (filters.price.gt && filters.price.lt) query += `&gt=${filters.price.gt}&lt=${filters.price.lt}`;
    if (filters.sort) query += `&sort=${filters.sort}`;
    if (filters.search) query += `&search=${encodeURIComponent(filters.search)}`;

    fetch('/shop' + query, { method: 'GET' })
        .then(response => response.text())
        .then(html => {
            let parser = new DOMParser();
            let doc = parser.parseFromString(html, 'text/html');
            document.querySelector('.product-grid').innerHTML = doc.querySelector('.product-grid').innerHTML;
            document.querySelector('.pagination').innerHTML = doc.querySelector('.pagination').innerHTML;

            document.querySelectorAll('.filter-item[data-type="category"]').forEach(item => item.classList.remove('active'));
            document.querySelector(`.filter-item[data-id='${filters.category}'][data-type="category"]`)?.classList.add('active');

            document.querySelectorAll('.filter-item[data-type="brand"]').forEach(item => item.classList.remove('active'));
            document.querySelector(`.filter-item[data-id='${filters.brand}'][data-type="brand"]`)?.classList.add('active');

            document.querySelectorAll('.price-button').forEach(button => button.classList.remove('active'));
            document.querySelector(`.price-button[data-gt='${filters.price.gt}'][data-lt='${filters.price.lt}']`)?.classList.add('active');

            document.querySelectorAll('.sort-button').forEach(button => button.classList.remove('active'));
            document.querySelector(`.sort-button[data-id='${filters.sort}']`)?.classList.add('active');
        })
        .catch(error => console.error('Error fetching data:', error));
}

function resetFilters() {
    window.location.href = window.location.pathname;
}

</script>

<script>
  function addToWishlist(productId) {
    $.ajax({
        url: '/addToWishlist',
        method: 'POST',
        data: { productId: productId },
        success: (response) => {
            console.log(response);
            if (response.status) {
                Swal.fire({
                    title: 'Added to Wishlist',
                    text: 'The product has been added to your wishlist',
                    icon: 'success',
                    showCancelButton: true,
                    confirmButtonText: 'Go to Wishlist',
                    cancelButtonText: 'OK',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/wishlist'; // Redirects to the wishlist page
                    }
                });
            } else {
                Swal.fire({
                    title: 'Already in Wishlist',
                    text: response.message,
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonText: 'Go to Wishlist',
                    cancelButtonText: 'OK',
                    confirmButtonColor: '#3085d6',
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/wishlist';
                    }
                });
            }
        },
        error: (error) => {
            Swal.fire({
                title: 'Error',
                text: 'There was an error adding to wishlist',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    });
}

  function addToCart(productId){
    $.ajax({
      url:'/addToCart',
      method:'POST',
      data: {productId: productId},
      success: (response) => {
        console.log("response is",response);
        if(response.status){
          Swal.fire({
                    title: 'Added to Cart',
                    text: response.message || 'The product has been added to your cart.',
                    icon: 'success',
                    timer: 2000,
                    showCancelButton: true, 
                    confirmButtonText: 'Go to Cart', 
                    cancelButtonText: 'Okay!', 
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/cart';
                    }
                });
        }else{
          Swal.fire({
            title: 'Error',
            text: response.message,
            icon:'info',
            timer: 2000
          })
        }
      },     
      error: (error) => {
        Swal.fire({
            title: 'Error',
            text: error.responseJSON?.message || 'There was an error adding cart',
            icon:'error',
            timer: 2000
          })
      }
    })
  }
</script>
<%- include("../../views/partials/user/footer") %>
